(function(){
    var store=new Baseliner.JsonStore({
        root: 'data' , 
        remoteSort: true,
        totalProperty:"totalCount", 
        id: 'id', 
        url: '/release/json',
        fields: [ 
            {  name: 'id' },
            {  name: 'name' },
            {  name: 'description' },
            {  name: 'application' },
            {  name: 'username' },
            {  name: 'active' },
            {  name: 'locked' },
            {  name: 'locked_reason' },
            {  name: 'bl' },
            {  name: 'bl_name' },
            {  name: 'ts' },
            {  name: 'contents' }
        ]
    });

    <& /comp/search_field.mas &>

    var render_icon = function(value,metadata,rec,rowIndex,colIndex,store) {
        var icon = rec.data.icon || '/static/images/scm/release.gif';
        return "<img alt='"+ rec.id +"' border=0 src='"+icon+"' />";
        //return "<div style='float: left; margin-top: 2'><img alt='"+ rec.id +"' border=0 src='"+icon+"' /></div><div style='font-family: Tahoma; font-size:10pt; margin-top: 4'><b>" + value + "</b></div>" ;
    };

    var render_item = function(value,metadata,rec,rowIndex,colIndex,store) {
        return "<div style='font-family: Tahoma; font-size:8pt; margin-top: 0; white-space:normal !important;'><b>" + value + "</b></div>" ;
    };

    var render_locked = function(value,metadata,rec,rowIndex,colIndex,store) {
        if( value == 0 ) {
            return '<div style="white-space:normal !important;">'+ _('No') + '</div>';
        } else {
            var reason = rec.data.locked_reason;
            return '<div style="white-space:normal !important;">'+ _('Yes') + " (" + _(reason) + ")" +'</div>';
        }
    };

    var render_bl = function(value,metadata,rec,rowIndex,colIndex,store) {
        var bl = rec.data.bl;
        if( bl == '*' ) {
            return _('Undefined');
        }else if(bl==value){
            return _('Invalid');   
        }else{
            return value;
        }
    };

    var render_content_list = function(value,metadata,rec,rowIndex,colIndex,store) {
        var ret = '';
        var i;
        if( value == null ) return '';
        for( var i=0; i< value.length; i++ ) {
            var v = value[i];
            var sty = v.valid ? '' : 'style="color: darkred"';
            ret += '<li '+ sty +'>' + v.ns_name + '</li>';
        };
        return ret;
    };
    // pluggable renders
    /*
    function renderTopic(value, p, record){
        return String.format(
                '<b>{0}</b><a href="http://extjs.com/forum/forumdisplay.php?f={3}" target="_blank">{1} Forum</a>',
                value, record.data.forumtitle, record.id, record.data.forumid);
    }
    function renderLast(value, p, r){
        return String.format('{0}<br/>by {1}', value.dateFormat('M j, Y, g:i a'), r.data['lastposter']);
    }
    */
    

    // Después de que cargue la página:
    var ps = 30; //page_size
    store.load({params:{start:0 , limit: ps}}); 

    // create the grid
    var grid = new Ext.grid.GridPanel({
        title: _('Releases'),
        header: false,
        tab_icon: '/static/images/scm/release.gif',
        stripeRows: true,
        autoScroll: true,
        autoWidth: true,
        store: store,
        height: 300,
        loadMask:'true',
        autoSizeColumns: true,
        deferredRender:true,
        viewConfig: {
                forceFit: true,
                enableRowBody:true,
                showPreview:true,
                getRowClass : function(record, rowIndex, p, store){
                        p.body = '';
                        var value = record.data.contents;
                        if( value != null ) {
                            p.body += '<div style="margin: 3 0 5 35">';
                            for( var i=0; i< value.length; i++ ) {
                                var v = value[i];
                                var sty = v.valid ? '' : 'style="color: darkred"';
                                p.body += '<li '+ sty +'>' + v.ns_name + '</li>';
                            };
                            p.body += '</div>';
                            return 'x-grid3-row-expanded';
                        }
                        return '';
                }
        },
        selModel: new Ext.grid.RowSelectionModel({singleSelect:true}),
        columns: [
            { dataIndex: 'icon', width: 16, hidden: false, sortable: false, renderer: render_icon },    
            { header: _('ID'), width: 35, dataIndex: 'id', sortable: true, hidden: true },  
            { header: _('Release'), width: 250, dataIndex: 'name', sortable: true, renderer: render_item }, 
            { header: _('Description'), width: 200, dataIndex: 'description', sortable: true, renderer: Baseliner.columnWrap }, 
            { header: _('Application'), width: 70, dataIndex: 'application', sortable: true },  
            { header: _('User'), width: 70, dataIndex: 'username', sortable: true, renderer: Baseliner.render_user_field }, 
            { header: _('Active'), width: 50, hidden: true, dataIndex: 'active', sortable: true , renderer: Baseliner.render_active },
            { header: _('Locked'), width: 80, dataIndex: 'locked', sortable: true , renderer: render_locked },
            { header: _('Baseline'), width: 100, dataIndex: 'bl_name', sortable: true, renderer: render_bl },   
            { header: _('Created On'), width: 150, dataIndex: 'ts', sortable: true },   
            { header: _('Contents'), width: 350, hidden:true, dataIndex: 'contents', sortable: true, renderer: render_content_list }    
        ],
        bbar: new Ext.PagingToolbar({
                            store: store,
                            pageSize: ps,
                            displayInfo: true,
                            displayMsg: _('Rows {0} - {1} of {2}'),
                            emptyMsg: _("No records found")
                    }),        
        tbar: [ _('Search') + ': ', ' ',
            new Ext.app.SearchField({
                store: store,
                params: {start: 0, limit: ps},
                emptyText: _('<Enter your search string>')
            }),
            new Ext.Toolbar.Button({
                text: _('Add'),
                icon:'/static/images/drop-add.gif',
                cls: 'x-btn-text-icon',
                handler: function() {
                    var sm = grid.getSelectionModel();
                    if (sm.hasSelection())
                    {
                        var sel = sm.getSelected();
                        Baseliner.addNewTab('/release/create?id_rel=' + sel.data.id , _('New Release') );
                    } else {
                        Baseliner.addNewTab('/release/create' , _('New Release') );
                    };
                    
                }
            }),
            new Ext.Toolbar.Button({
                text: _('Edit'),
                icon:'/static/images/drop-yes.gif',
                cls: 'x-btn-text-icon',
                handler: function() {
                    var sm = grid.getSelectionModel();
                    if (sm.hasSelection())
                    {
                        var sel = sm.getSelected();
                        Baseliner.addNewTab('/release/edit?id_rel=' + sel.data.id , sel.data.name);
                    } else {
                        Ext.Msg.alert('Error', 'Falta seleccionar una fila');   
                    };
                    
                }
            }),
            new Ext.Toolbar.Button({
                text: _('Delete'),
                icon:'/static/images/del.gif',
                cls: 'x-btn-text-icon',
                handler: function() {
                    var sm = grid.getSelectionModel();
                    var sel = sm.getSelected();
                    Ext.Msg.confirm(_('Confirmation'), _('Are you sure you want to delete the release %1?', sel.data.name), 
                        function(btn){ 
                            if(btn=='yes') {
                                var conn = new Ext.data.Connection();
                                conn.request({
                                    url: '/release/update',
                                    params: { action: 'delete', id_rel: sel.data.id },
                                    success: function(resp,opt) { grid.getStore().remove(sel); },
                                    failure: function(resp,opt) { Ext.Msg.alert( _('Error'), _('Could not delete the release.') ); }
                                }); 
                            }
                        } );
                }
            }),
            '->'
            ]
    });

    grid.on("rowdblclick", function(grid, rowIndex, e ) {
        var r = grid.getStore().getAt(rowIndex);
        Baseliner.addNewTab('/release/edit?id_rel=' + r.get('id') , r.get('name') );
    });     

    return grid;
})();


