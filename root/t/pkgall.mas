<%args>
    $rfc => '0951358'
</%args>
<pre>
sub can_job {
    my ( $self, $bl ) = @_;
	#TODO check approval status

    # check can_job of contents
    my $can_job = 1;
    my @why;
    for my $item ( $self->contents ) {
        unless( $item->can_job ) {
            push @why, $item->why_not;
            $can_job = 0;
        }
    }
    $self->why_not( join ', ', @why ) unless $can_job;
	return $can_job;
}

<%perl>
    use Moose::Autobox;
	my $config = Baseliner->model('ConfigStore')->get( 'config.job' );
    
    print "applica/test"->split('/')->[1];
    print "<li>any=", ['aa','vv','ss']->any eq ['cc','dd','vv',11]->any;
    print "<li>", join(',', map { $_->icon } $c->model('Namespaces')->list( isa=>'BaselinerX::CA::Endevor::Namespace::Package', bl=>'PREP' ) );
return;
	my $row = $c->model('Baseliner::BaliRelease')->search({ id=> 82 })->first;
    my $release = BaselinerX::Release::Namespace::Release->new({ row=>$row });
    print "<li>Can edit release: ", $c->username, ": ", $release->user_can_edit( $c->username );
    print "<li>", defined $c->model('Namespaces')->get( 'endevor.package/E0083I00000000@2' )->icon;
    print "<li>", _dump( $c->model('Namespaces')->list( does=>'Baseliner::Role::Namespaces::Application' ) );
    print "<li>", _dump( $c->model('Namespaces')->list( isa=>'BaselinerX::CA::Harvest::Namespace::Package', bl=>'PREP' ) );
    print "<li>", _dump( $c->model('Permissions')->user_namespaces( 'AACF417V' ) );
    print "<li>", _dump( $c->model('Permissions')->list( username=>'AACF417V', action=>'action.job.create' ) );
    #print "<li>", _dump( parse_date('dd/mm/YY', '2010-11-22 23:12' ) ) ;
    print "<li>" , $c->model('Permissions')->list( username=> $c->username, action=>'action.surrogate' );
return;
    print "<li>", _dump( Baseliner->model('ConfigStore')->get('config.ca.harvest.map', )->{baseline_to_view}->{DESA} );
    print "<li>vv=" , ['aa','adf']->any eq 'vv'; 
    print "<li>aa=" , ['aa','adf']->any eq 'aa'; 
    print "<li>NS PG=" . $c->model('Namespaces')->get('harvest.packagegroup/PG.0188.Version 8.27');
    print "<li>ALL for me=" . _dump( [ $c->model('Permissions')->user_grants( 'SVM8413K' ) ] );
    #print "<li>CONFIG=" . _dump( $config );

    # jobs
	my $rs = Baseliner->model('Baseliner::BaliJobItems')->search({ item=> 'harvest.package/H0188S0950754@09' }, { order_by => "me.id desc", prefetch=>['id_job'] });
    while( my $r = $rs->next ) {
        print "<li>JOB=" . $r->id_job->name , $r->id_job->is_active; 
    }

    my $ns = Baseliner->model('Namespaces')->get( 'harvest.package/H0188S0951220@01' );
    print '<li>' . $ns ;

return;

   print "<li>IS=" . BaselinerX::CA::Endevor::Namespace::Package->isa( 'BaselinerX::CA::Endevor::Namespace::Package' ); 
    foreach my $package ( $c->model('Namespaces')->list(does=>'Baseliner::Role::Namespace::Package', query=>$rfc ) ) {
        print "<li>" . $package->ns_name;
    }
    foreach my $item ( $c->model('Namespaces')->list(does=>'Baseliner::Role::Namespace::Version') ) {
        print "<li>" . $item->ns_name . "=" . $item->ccid;
    }
print '<hr>';
    foreach my $package ( $c->model('Namespaces')->providers(isa_any=>['BaselinerX::CA::Endevor::Namespace::Package', 'BaselinerX::CA::Harvest::Namespace::Package' ] ) ) {
        print "<li>" . $package;
    }
print '<hr>';
    print "<li>$_" foreach $c->model('Namespaces')->providers(isa=>'BaselinerX::CA::Endevor::Namespace::Package' );
</%perl>
