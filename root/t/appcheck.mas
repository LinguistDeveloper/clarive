<%perl>
		use BaselinerX::Job::Log;
		my $rs = $c->model('Baseliner::BaliJob')->search({ status=>'APPROVAL' }, { order_by=>'starttime asc' });
		my $final_status;
		while( my $row = $rs->next ) {
print "<li>APPROVAL=" . $row->id;
			my @items = map { $_->item } $row->bali_job_items->all;
			foreach my $item ( @items ) {
print "<li>$item";
				my $req = $c->model('Baseliner::BaliRequest')->search({ ns=>$item, status=>{ '<>' => 'cancelled' } }, { order_by=>'id desc' })->first;
				if( ref $req ) {
					if( $req->status eq 'pending' ) {
print '<li>PENDING';
						$final_status = $req->status;
						last;
					} elsif( $req->status eq 'rejected' ) {
print '<li>REJECTED';
						$final_status = $req->status;
						last;
					} elsif( $req->status eq 'approved' ) {
print '<li>APPROVED';
						$final_status = $req->status;
					} else {
print '<li>' . $req->status, '=', $req->id;
					}
				} else {
					print '<li>No requests found';
				}
			}
print "<li>FINALSTATUS=$final_status";
			if( $final_status eq 'approved' ) {
				my $logger = new BaselinerX::Job::Log({ jobid=>$row->id });
				$logger->info('Pase aprobado');
				$row->status('READY');
				$row->update;
			}
			elsif( $final_status eq 'rejected' ) {
				my $logger = new BaselinerX::Job::Log({ jobid=>$row->id });
				$logger->info('Pase tiene elementos rechazados');
				$c->model('Jobs')->cancel( id=>$row->id );
			}
		}
</%perl>
