#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw($Bin);
BEGIN {
    if( ! $ENV{CLARIVE_HOME} ) {
        our $script_home = $Bin . '/..';
        chdir $script_home;
        require Cwd;
        $script_home = Cwd::realpath( $script_home );  # clean up the script_home path 
        $ENV{CLARIVE_HOME} //= $script_home;
    }
}
use lib "$ENV{CLARIVE_HOME}/lib";
use lib "$ENV{CLARIVE_HOME}/local-lib/lib/perl5";
use Getopt::Mini 0.02 later=>1;
select(STDERR); $|=1;
select(STDOUT); $|=1;

my ($cmd, @pre_opts, );

# capture cla options from before the command
while( @ARGV ) {
    my $arg = shift @ARGV;
    if( $arg =~ /^-/ ) {
        push @pre_opts, $arg;
    } else {
        $cmd = $arg;
        last;
    }
}

my %cla_opts;
if( @pre_opts ) {
    local @ARGV = @pre_opts;
    %cla_opts = Getopt::Mini::getopt( hungry_flags=>1, define=>1 );
}

# get command options
my %opts = Getopt::Mini::getopt( hungry_flags=>1, define=>1 );
my $argv = delete $opts{_argv};

if( !$cmd ) {
    if( exists $cla_opts{version} ) {
        $cmd = 'version';
    }
    elsif( exists $cla_opts{h} ) {
        $cmd = 'help';
    }
    else { $cmd='help' }
}

# create app 
require Clarive::App;
my $app = Clarive::App->new( %opts );

# run command
$app->do_cmd( cmd=>$cmd );

exit 0;
